<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>A Software Engineer&#39;s Journal</title>
    <link>https://favoritekk.github.io/</link>
    <description>Recent content on A Software Engineer&#39;s Journal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>vankhiem583@gmail.com (Khiêm (Kenvin) Văn)</managingEditor>
    <webMaster>vankhiem583@gmail.com (Khiêm (Kenvin) Văn)</webMaster>
    <copyright>&amp;copy;{year} - favoritekk.github.io</copyright>
    <lastBuildDate>Tue, 16 Nov 2021 22:02:21 +0700</lastBuildDate>
    
        <atom:link href="https://favoritekk.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      

      
      <item>
        <title>Play with Coroutine in Kotlin &amp; Android</title>
        <link>https://favoritekk.github.io/programming/kotlin-android-coroutines/</link>
        <pubDate>Tue, 16 Nov 2021 22:02:21 +0700</pubDate>
        <author>vankhiem583@gmail.com (Khiêm (Kenvin) Văn)</author>
        <atom:modified>Tue, 16 Nov 2021 22:02:21 +0700</atom:modified>
        <guid>https://favoritekk.github.io/programming/kotlin-android-coroutines/</guid>
        <description>Imagine a Rock - Paper - Scissor game, it has a player versue a Host. When the game starts, the Host will wait for the player forming his/her hand shape. And while waiting, let the Host continuously forms his hand (to make it not boring).
Make an infinite loop The pseudocode might look like this:
while (playerThinking) randomly form a hand shape show it to player In Android, we have a main looper that also handles UI.</description>
        
        <dc:creator>Kevin</dc:creator>
        
        
        
        
          
            
              <category>kotlin</category>
            
          
            
              <category>android</category>
            
          
        
        
          
            
              <category>programming</category>
            
          
        
        
      </item>
      
      <item>
        <title>Implement std::make_unique in C&#43;&#43;11</title>
        <link>https://favoritekk.github.io/programming/std_make_unique_in_cpp_11/</link>
        <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
        <author>vankhiem583@gmail.com (Khiêm (Kenvin) Văn)</author>
        <atom:modified>Thu, 04 Feb 2021 00:00:00 +0000</atom:modified>
        <guid>https://favoritekk.github.io/programming/std_make_unique_in_cpp_11/</guid>
        <description>Problem description If your project was using standard C++11 and you wanted to copy an open source file somewhere which contains the use of std::make_unique function, you might get compile error
 error: ‘make_unique’ is not a member of ‘std’
 Because std::make_unique was added in C++14, not available in C++11.
Solution Add a wrapper template in a common header file in your project:
1 2 3 4 5 6 7 8 9 10 11 12 13 14  namespace details { // make_unique support for pre c++14  #if __cplusplus &amp;gt;= 201402L // C++14 and beyond using std::make_unique; #else template&amp;lt;typename T, typename.</description>
        
        <dc:creator>Kevin</dc:creator>
        
        
        
        
          
            
              <category>cplusplus</category>
            
          
            
              <category>cpp</category>
            
          
        
        
          
            
              <category>programming</category>
            
          
        
        
      </item>
      
      <item>
        <title>What is arrow (-&gt;) in function declaration in C&#43;&#43;</title>
        <link>https://favoritekk.github.io/programming/cplusplus-function-with-arrow/</link>
        <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
        <author>vankhiem583@gmail.com (Khiêm (Kenvin) Văn)</author>
        <atom:modified>Fri, 01 Jan 2021 00:00:00 +0000</atom:modified>
        <guid>https://favoritekk.github.io/programming/cplusplus-function-with-arrow/</guid>
        <description>Alternative function syntax The arrow (-&amp;gt;) in function heading in C++ is just another form of function syntax in C++11.
This is standard function declaration:
1  return-type function_name(argument-list) { body-statement }   As C++ grew more complex, it exposed several limits. For example, in C++03 this is not allowed:
1 2  template&amp;lt;class Lhs, class Rhs&amp;gt; Ret adding_func(const Lhs &amp;amp;lhs, const Rhs &amp;amp;rhs) {return lhs + rhs;} //Ret must be the type of lhs+rhs   The compiler would not know what Ret is.</description>
        
        <dc:creator>Kevin</dc:creator>
        
        
        
        
          
            
              <category>cplusplus</category>
            
          
            
              <category>cpp</category>
            
          
        
        
          
            
              <category>programming</category>
            
          
        
        
      </item>
      
      <item>
        <title>My First Post</title>
        <link>https://favoritekk.github.io/programming/my-first-post/</link>
        <pubDate>Mon, 14 Dec 2020 00:00:00 +0700</pubDate>
        <author>vankhiem583@gmail.com (Khiêm (Kenvin) Văn)</author>
        <atom:modified>Mon, 14 Dec 2020 00:00:00 +0700</atom:modified>
        <guid>https://favoritekk.github.io/programming/my-first-post/</guid>
        <description>This is my first post about creating a personal blog. I plan to create my own blog using a static site generator, and a free host service to host my created blog.
I first tried to use Jekyll for generating my static site. But I found out I&amp;rsquo;m more familiar with Go language, so I decided to use Hugo - a build-website framework. And I&amp;rsquo;ll use Github Page to host my blog site, it&amp;rsquo;s totally free according to my plan.</description>
        
        <dc:creator>Kevin</dc:creator>
        
        
        
        
          
            
              <category>Hugo</category>
            
          
        
        
          
            
              <category>programming</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>